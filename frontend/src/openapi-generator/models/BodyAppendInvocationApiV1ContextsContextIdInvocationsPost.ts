/* tslint:disable */
/* eslint-disable */
/**
 * Invoke AI
 * An API for invoking AI image operations
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Invocation } from './Invocation';
import {
    InvocationFromJSON,
    InvocationFromJSONTyped,
    InvocationToJSON,
} from './Invocation';
import type { InvocationFieldLink } from './InvocationFieldLink';
import {
    InvocationFieldLinkFromJSON,
    InvocationFieldLinkFromJSONTyped,
    InvocationFieldLinkToJSON,
} from './InvocationFieldLink';

/**
 * 
 * @export
 * @interface BodyAppendInvocationApiV1ContextsContextIdInvocationsPost
 */
export interface BodyAppendInvocationApiV1ContextsContextIdInvocationsPost {
    /**
     * 
     * @type {Invocation}
     * @memberof BodyAppendInvocationApiV1ContextsContextIdInvocationsPost
     */
    invocation: Invocation;
    /**
     * Links from previous invocations to the new invocation
     * @type {Array<InvocationFieldLink>}
     * @memberof BodyAppendInvocationApiV1ContextsContextIdInvocationsPost
     */
    links?: Array<InvocationFieldLink>;
}

/**
 * Check if a given object implements the BodyAppendInvocationApiV1ContextsContextIdInvocationsPost interface.
 */
export function instanceOfBodyAppendInvocationApiV1ContextsContextIdInvocationsPost(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "invocation" in value;

    return isInstance;
}

export function BodyAppendInvocationApiV1ContextsContextIdInvocationsPostFromJSON(json: any): BodyAppendInvocationApiV1ContextsContextIdInvocationsPost {
    return BodyAppendInvocationApiV1ContextsContextIdInvocationsPostFromJSONTyped(json, false);
}

export function BodyAppendInvocationApiV1ContextsContextIdInvocationsPostFromJSONTyped(json: any, ignoreDiscriminator: boolean): BodyAppendInvocationApiV1ContextsContextIdInvocationsPost {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'invocation': InvocationFromJSON(json['invocation']),
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(InvocationFieldLinkFromJSON)),
    };
}

export function BodyAppendInvocationApiV1ContextsContextIdInvocationsPostToJSON(value?: BodyAppendInvocationApiV1ContextsContextIdInvocationsPost | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'invocation': InvocationToJSON(value.invocation),
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(InvocationFieldLinkToJSON)),
    };
}

