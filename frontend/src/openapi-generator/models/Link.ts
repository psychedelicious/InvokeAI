/* tslint:disable */
/* eslint-disable */
/**
 * Invoke AI
 * An API for invoking AI image operations
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FromNode } from './FromNode';
import {
    FromNodeFromJSON,
    FromNodeFromJSONTyped,
    FromNodeToJSON,
} from './FromNode';
import type { ToNode } from './ToNode';
import {
    ToNodeFromJSON,
    ToNodeFromJSONTyped,
    ToNodeToJSON,
} from './ToNode';

/**
 * A link between two fields in different nodes
 * @export
 * @interface Link
 */
export interface Link {
    /**
     * 
     * @type {FromNode}
     * @memberof Link
     */
    fromNode: FromNode;
    /**
     * 
     * @type {ToNode}
     * @memberof Link
     */
    toNode: ToNode;
}

/**
 * Check if a given object implements the Link interface.
 */
export function instanceOfLink(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fromNode" in value;
    isInstance = isInstance && "toNode" in value;

    return isInstance;
}

export function LinkFromJSON(json: any): Link {
    return LinkFromJSONTyped(json, false);
}

export function LinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): Link {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fromNode': FromNodeFromJSON(json['from_node']),
        'toNode': ToNodeFromJSON(json['to_node']),
    };
}

export function LinkToJSON(value?: Link | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'from_node': FromNodeToJSON(value.fromNode),
        'to_node': ToNodeToJSON(value.toNode),
    };
}

