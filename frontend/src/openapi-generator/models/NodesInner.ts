/* tslint:disable */
/* eslint-disable */
/**
 * Invoke AI
 * An API for invoking AI image operations
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    ExampleInvocation,
    instanceOfExampleInvocation,
    ExampleInvocationFromJSON,
    ExampleInvocationFromJSONTyped,
    ExampleInvocationToJSON,
} from './ExampleInvocation';
import {
    ImageToImageInvocation,
    instanceOfImageToImageInvocation,
    ImageToImageInvocationFromJSON,
    ImageToImageInvocationFromJSONTyped,
    ImageToImageInvocationToJSON,
} from './ImageToImageInvocation';
import {
    LoadImageInvocation,
    instanceOfLoadImageInvocation,
    LoadImageInvocationFromJSON,
    LoadImageInvocationFromJSONTyped,
    LoadImageInvocationToJSON,
} from './LoadImageInvocation';
import {
    RestoreFaceInvocation,
    instanceOfRestoreFaceInvocation,
    RestoreFaceInvocationFromJSON,
    RestoreFaceInvocationFromJSONTyped,
    RestoreFaceInvocationToJSON,
} from './RestoreFaceInvocation';
import {
    ShowImageInvocation,
    instanceOfShowImageInvocation,
    ShowImageInvocationFromJSON,
    ShowImageInvocationFromJSONTyped,
    ShowImageInvocationToJSON,
} from './ShowImageInvocation';
import {
    SimplePromptInvocation,
    instanceOfSimplePromptInvocation,
    SimplePromptInvocationFromJSON,
    SimplePromptInvocationFromJSONTyped,
    SimplePromptInvocationToJSON,
} from './SimplePromptInvocation';
import {
    TextToImageInvocation,
    instanceOfTextToImageInvocation,
    TextToImageInvocationFromJSON,
    TextToImageInvocationFromJSONTyped,
    TextToImageInvocationToJSON,
} from './TextToImageInvocation';
import {
    UpscaleInvocation,
    instanceOfUpscaleInvocation,
    UpscaleInvocationFromJSON,
    UpscaleInvocationFromJSONTyped,
    UpscaleInvocationToJSON,
} from './UpscaleInvocation';

/**
 * @type NodesInner
 * 
 * @export
 */
export type NodesInner = { type: 'example_invocation' } & ExampleInvocation | { type: 'img2img' } & ImageToImageInvocation | { type: 'load_image' } & LoadImageInvocation | { type: 'restore_face' } & RestoreFaceInvocation | { type: 'show_image' } & ShowImageInvocation | { type: 'simple_prompt' } & SimplePromptInvocation | { type: 'txt2img' } & TextToImageInvocation | { type: 'upscale' } & UpscaleInvocation;

export function NodesInnerFromJSON(json: any): NodesInner {
    return NodesInnerFromJSONTyped(json, false);
}

export function NodesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): NodesInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'example_invocation':
            return {...ExampleInvocationFromJSONTyped(json, true), type: 'example_invocation'};
        case 'img2img':
            return {...ImageToImageInvocationFromJSONTyped(json, true), type: 'img2img'};
        case 'load_image':
            return {...LoadImageInvocationFromJSONTyped(json, true), type: 'load_image'};
        case 'restore_face':
            return {...RestoreFaceInvocationFromJSONTyped(json, true), type: 'restore_face'};
        case 'show_image':
            return {...ShowImageInvocationFromJSONTyped(json, true), type: 'show_image'};
        case 'simple_prompt':
            return {...SimplePromptInvocationFromJSONTyped(json, true), type: 'simple_prompt'};
        case 'txt2img':
            return {...TextToImageInvocationFromJSONTyped(json, true), type: 'txt2img'};
        case 'upscale':
            return {...UpscaleInvocationFromJSONTyped(json, true), type: 'upscale'};
        default:
            throw new Error(`No variant of NodesInner exists with 'type=${json['type']}'`);
    }
}

export function NodesInnerToJSON(value?: NodesInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'example_invocation':
            return ExampleInvocationToJSON(value);
        case 'img2img':
            return ImageToImageInvocationToJSON(value);
        case 'load_image':
            return LoadImageInvocationToJSON(value);
        case 'restore_face':
            return RestoreFaceInvocationToJSON(value);
        case 'show_image':
            return ShowImageInvocationToJSON(value);
        case 'simple_prompt':
            return SimplePromptInvocationToJSON(value);
        case 'txt2img':
            return TextToImageInvocationToJSON(value);
        case 'upscale':
            return UpscaleInvocationToJSON(value);
        default:
            throw new Error(`No variant of NodesInner exists with 'type=${value['type']}'`);
    }

}

