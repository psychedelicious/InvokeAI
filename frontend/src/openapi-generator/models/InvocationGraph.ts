/* tslint:disable */
/* eslint-disable */
/**
 * Invoke AI
 * An API for invoking AI image operations
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
} from './Link';
import type { NodesInner } from './NodesInner';
import {
    NodesInnerFromJSON,
    NodesInnerFromJSONTyped,
    NodesInnerToJSON,
} from './NodesInner';

/**
 * The invocation graph to initialize the context with
 * @export
 * @interface InvocationGraph
 */
export interface InvocationGraph {
    /**
     * The nodes in this map
     * @type {Array<NodesInner>}
     * @memberof InvocationGraph
     */
    nodes: Array<NodesInner>;
    /**
     * The links in this map
     * @type {Array<Link>}
     * @memberof InvocationGraph
     */
    links: Array<Link>;
}

/**
 * Check if a given object implements the InvocationGraph interface.
 */
export function instanceOfInvocationGraph(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "nodes" in value;
    isInstance = isInstance && "links" in value;

    return isInstance;
}

export function InvocationGraphFromJSON(json: any): InvocationGraph {
    return InvocationGraphFromJSONTyped(json, false);
}

export function InvocationGraphFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvocationGraph {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nodes': ((json['nodes'] as Array<any>).map(NodesInnerFromJSON)),
        'links': ((json['links'] as Array<any>).map(LinkFromJSON)),
    };
}

export function InvocationGraphToJSON(value?: InvocationGraph | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nodes': ((value.nodes as Array<any>).map(NodesInnerToJSON)),
        'links': ((value.links as Array<any>).map(LinkToJSON)),
    };
}

